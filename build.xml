<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->

<project basedir="." default="hdp212" name="R4H">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <target  name="cdh512">
	<property name="hadoopdir" value="/.autodirect/acclgwork/ufa/HDFS/r4h-dist-jars/cdh5.1.2" />
	<property name="matching-src" value="r4h-cdh5.1.2" />
	<property name="matching-common" value="common-hadoop_2.3_2.4" />
	<property name="jar-title" value="R4H-CDH5.1.2" />
	<antcall target="build" />
    </target>
    <target  name="hdp212">
	<property name="hadoopdir" value="/.autodirect/acclgwork/ufa/HDFS/r4h-dist-jars/hdp2.1.2" />
	<property name="matching-src" value="r4h-hdp2.1.2" />
	<property name="matching-common" value="common-hadoop_2.3_2.4" />
	<property name="jar-title" value="R4H-HDP2.1.2" />
	<antcall target="build" />
    </target>
    <target name="hdp220">
	<property name="hadoopdir" value="/.autodirect/acclgwork/ufa/HDFS/r4h-dist-jars/hdp2.2.0" />
	<property name="matching-src" value="r4h-hdp2.2.0" />
	<property name="matching-common" value="common-hadoop_2.5_2.6" />
	<property name="jar-title" value="R4H-HDP2.2.0" />
	<antcall target="build" />
    </target>
    <target name="cdh531">
        <property name="hadoopdir" value="/.autodirect/acclgwork/ufa/HDFS/r4h-dist-jars/cdh5.3.1" />
        <property name="matching-src" value="r4h-cdh5.3.1" />
        <property name="matching-common" value="common-hadoop_2.5_2.6" />
        <property name="jar-title" value="R4H-CDH5.3.1" />
        <antcall target="build" />
    </target>
    <target name="hdp230">
        <property name="hadoopdir" value="/.autodirect/acclgwork/ufa/HDFS/r4h-dist-jars/hdp2.3.0" />
        <property name="matching-src" value="r4h-hdp2.3.0" />
        <property name="matching-common" value="r4h-hdp2.3.0" /> <!-- HDP2.3 doesn't have a matching common yet, meanwhile matching-common=matching-src -->
        <property name="jar-title" value="R4H-HDP2.3.0" />
        <antcall target="build" />
    </target>
    <target name="init">
        <mkdir dir="build"/>
        <copy includeemptydirs="false" todir="build">
		<fileset dir="src/${matching-src}/src">
				<exclude name="**/*.java"/>
		</fileset>
		<fileset dir="src/${matching-src}/test">
				<exclude name="**/*.java"/>
		</fileset>
		<fileset dir="src/common/src">
				<exclude name="**/*.java"/>
		</fileset>
		<fileset dir="src/${matching-common}/src">
				<exclude name="**/*.java"/>
		</fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="build"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target name="path-init" unless="id">

	<path id="R4H.classpath">
		<pathelement location="build"/>
		<fileset dir="${hadoopdir}/">
			<include name="*.jar" />
		</fileset>
		<pathelement location="jxio/bin/jxio.jar"/>
	</path>
    </target>

    <target depends="path-init,build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
	    <echo message="--- ${jar-title} ---" />
	<exec outputproperty="gitver" executable="git">
		     <arg value="describe"/>
		     <arg value="--long"/>
		     <arg value="--tags"/>
		     <arg value="--always"/>
		     <arg value="--dirty"/>
	</exec>
	<echo message="${ant.project.name}: ${ant.file}"/>
	<javac debug="true" debuglevel="${debuglevel}" destdir="build" includeantruntime="false" source="${source}" target="${target}">
        <src path="src/${matching-src}/src"/>
        <src path="src/${matching-src}/test"/>
        <src path="src/${matching-common}/src"/>
        <src path="src/common/src"/>
        <classpath refid="R4H.classpath"/>
    </javac>

	    <jar destfile="build/r4h.jar" basedir="build/" includes="**/*.class">
	       <manifest>
			<attribute name="Implementation-Title" value="${jar-title}"/>
		       <attribute name="Implementation-Version" value="${gitver}"/>
		       <attribute name="Implementation-Vendor" value="Mellanox Technologies"/>
		</manifest>
	    </jar>
    </target>
</project>
